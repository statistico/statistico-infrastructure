AWSTemplateFormatVersion: '2010-09-09'
Description: Deploy an ECS service
Parameters:
  EnvironmentName:
    Type: String
    Default: statistico-production
    Description: The name of the environment to add this service to
  ServiceName:
    Type: String
    Default: statistico-odds-warehouse-background
    Description: A name for the service
  ImageUrl:
    Type: String
    Default: 216629550457.dkr.ecr.eu-west-2.amazonaws.com/statistico-odds-warehouse:156a8216571801dbbebe32138f2270ee7b9dda02
    Description: The url of a docker image that contains the application process that
      will handle the traffic for this service
  ContainerCpu:
    Type: Number
    Default: 256
    Description: How much CPU to give the container. 1024 is 1 CPU
  ContainerMemory:
    Type: Number
    Default: 512
    Description: How much memory in megabytes to give the container
  MinContainers:
    Type: Number
    Default: 1
    Description: Minimum number of copies of the service task to run
  MaxContainers:
    Type: Number
    Default: 3
    Description: Maximum number ofcopies of the service task to run
  AutoScalingTargetValue:
    Type: Number
    Default: 50
    Description: "Target CPU utilization (%) for ECS services auto scaling"

Resources:
  # A log group for storing the stdout logs from this service's containers
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub ${EnvironmentName}-service-${ServiceName}

  AutoScalingRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceAutoscaleRole'

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Ref 'ServiceName'
      Cpu: !Ref 'ContainerCpu'
      Memory: !Ref 'ContainerMemory'
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: arn:aws:iam::216629550457:role/ecsTaskExecutionRole
      ContainerDefinitions:
        - Name: 'migrate'
          Image: !Ref 'ImageUrl'
          Essential: false
          Secrets:
            - Name: DB_DRIVER
              ValueFrom: arn:aws:ssm:eu-west-2:216629550457:parameter/statistico-odds-warehouse-DB_DRIVER
            - Name: DB_HOST
              ValueFrom: arn:aws:ssm:eu-west-2:216629550457:parameter/statistico-odds-warehouse-DB_HOST
            - Name: DB_NAME
              ValueFrom: arn:aws:ssm:eu-west-2:216629550457:parameter/statistico-odds-warehouse-DB_NAME
            - Name: DB_PASSWORD
              ValueFrom: arn:aws:ssm:eu-west-2:216629550457:parameter/statistico-odds-warehouse-DB_PASSWORD
            - Name: DB_PORT
              ValueFrom: arn:aws:ssm:eu-west-2:216629550457:parameter/statistico-odds-warehouse-DB_PORT
            - Name: DB_USER
              ValueFrom: arn:aws:ssm:eu-west-2:216629550457:parameter/statistico-odds-warehouse-DB_USER
            - Name: SENTRY_DSN
              ValueFrom: arn:aws:ssm:eu-west-2:216629550457:parameter/statistico-odds-warehouse-SENTRY_DSN
          Command:
            - "./bin/migrate"
          LogConfiguration:
            LogDriver: 'awslogs'
            Options:
              awslogs-group: !Sub ${EnvironmentName}-service-${ServiceName}
              awslogs-region: !Ref 'AWS::Region'
              awslogs-stream-prefix: !Ref 'ServiceName'
        - Name: 'queue'
          Image: !Ref 'ImageUrl'
          Essential: true
          Secrets:
            - Name: DB_DRIVER
              ValueFrom: arn:aws:ssm:eu-west-2:216629550457:parameter/statistico-odds-warehouse-DB_DRIVER
            - Name: DB_HOST
              ValueFrom: arn:aws:ssm:eu-west-2:216629550457:parameter/statistico-odds-warehouse-DB_HOST
            - Name: DB_NAME
              ValueFrom: arn:aws:ssm:eu-west-2:216629550457:parameter/statistico-odds-warehouse-DB_NAME
            - Name: DB_PASSWORD
              ValueFrom: arn:aws:ssm:eu-west-2:216629550457:parameter/statistico-odds-warehouse-DB_PASSWORD
            - Name: DB_PORT
              ValueFrom: arn:aws:ssm:eu-west-2:216629550457:parameter/statistico-odds-warehouse-DB_PORT
            - Name: DB_USER
              ValueFrom: arn:aws:ssm:eu-west-2:216629550457:parameter/statistico-odds-warehouse-DB_USER
            - Name: AWS_KEY
              ValueFrom: arn:aws:ssm:eu-west-2:216629550457:parameter/statistico-odds-warehouse-AWS_KEY
            - Name: AWS_SECRET
              ValueFrom: arn:aws:ssm:eu-west-2:216629550457:parameter/statistico-odds-warehouse-AWS_SECRET
            - Name: AWS_QUEUE_URL
              ValueFrom: arn:aws:ssm:eu-west-2:216629550457:parameter/statistico-odds-warehouse-AWS_QUEUE_URL
            - Name: SENTRY_DSN
              ValueFrom: arn:aws:ssm:eu-west-2:216629550457:parameter/statistico-odds-warehouse-SENTRY_DSN
          Environment:
            - Name: QUEUE_DRIVER
              Value: aws
            - Name: AWS_REGION
              Value: eu-west-2
          Command:
            - "./queue"
          LogConfiguration:
            LogDriver: 'awslogs'
            Options:
              awslogs-group: !Sub ${EnvironmentName}-service-${ServiceName}
              awslogs-region: !Ref 'AWS::Region'
              awslogs-stream-prefix: !Ref 'ServiceName'

  Service:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: !Ref 'ServiceName'
      Cluster:
        Fn::ImportValue: !Sub ${EnvironmentName}:ClusterName
      LaunchType: FARGATE
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 75
      DesiredCount: !Ref 'MinContainers'
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - Fn::ImportValue: !Sub ${EnvironmentName}:ContainerSecurityGroup
          Subnets:
            - Fn::ImportValue: !Sub ${EnvironmentName}:PublicSubnetOne
            - Fn::ImportValue: !Sub ${EnvironmentName}:PublicSubnetTwo
      TaskDefinition: !Ref 'TaskDefinition'

  AutoScalingTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Properties:
      MinCapacity: !Ref MinContainers
      MaxCapacity: !Ref MaxContainers
      ResourceId: !Join [ '/', [ service, 'statistico-production', !GetAtt Service.Name ] ]
      ScalableDimension: ecs:service:DesiredCount
      ServiceNamespace: ecs
      RoleARN: !GetAtt AutoScalingRole.Arn
